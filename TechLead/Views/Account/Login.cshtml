@using TechLead.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<div class="Content">
    <div class="RegistrationLoginForm">
        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h4>Use a local account to log in.</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="checkbox">
                @Html.CheckBoxFor(m => m.RememberMe)
                @Html.LabelFor(m => m.RememberMe)
            </div>
            <div class="form-group">
                <input type="submit" value="Log in" class="btn btn-default" />
            </div>
            @* Enable this once you have account confirmation enabled for password reset functionality
            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>*@
        }
    </div>
    <div class="ExternLogRegBox">
        <h4>Use another service to log in</h4>
        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        <br />
        <p>
            <strong>@Html.ActionLink("Register as a new user", "Register")</strong>
        </p>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}