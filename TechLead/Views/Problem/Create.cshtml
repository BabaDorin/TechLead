@model TechLead.Models.ExerciseViewModel

@{
    ViewBag.Title = "Create";
}

<div class="Content">
    @using (Html.BeginForm("Create", "Problem", FormMethod.Post, new { id = "submitForm" }))
    {
        @Html.AntiForgeryToken();
        <div class="CreateProblem">
            <p><strong>Create an exercise</strong></p>
            <br />
            <hr />
            <div class="Level">
                <p>FrontEnd</p>
            </div>
            <p>Write down the information that will be displayed to the user</p>
            <br /><br />


            <div class="form-group">
                @Html.LabelFor(ex => ex.Name, "Title")
                @Html.TextBoxFor(ex => ex.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(ex => ex.Name)
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.DifficultyId, "Difficulty\n")
                @Html.DropDownListFor(ex => ex.DifficultyId, new SelectList(Model.Difficulty, "Id", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(ex => ex.Difficulty)
            </div>
            <br />
            <div class="form-group">
                <br />
                <div class="alert alert-info">
                    <p> Range: 10-400. Please, set the points according to the problem's difficulty.</p>
                    <br />
                    <p><b>Recommended:</b></p>
                    <p>Beginner 10-100</p>
                    <p>Intermediate 50-200</p>
                    <p>Advanced 150-400</p>
                </div>
                @Html.LabelFor(ex => ex.Points);
                @Html.TextBoxFor(ex => ex.Points, new { @class = "form-control" })
                @Html.ValidationMessageFor(ex => ex.Points)
            </div>
            <br />
            <div class="form-group">
                <div class="alert alert-info">
                    <strong>Info!</strong> If you do not want to set any runtime limit for this problem, leave the field blank.
                </div>
                    @Html.LabelFor(ex => ex.ExecutionTime, "Runtime limit (in miliseconds)")
                    @Html.TextBoxFor(ex => ex.ExecutionTime, new { @class = "form-control" })
                    @Html.ValidationMessageFor(ex => ex.ExecutionTime)
            </div>
            <br />
            <div class="form-group">
                <div class="alert alert-info">
                    <strong>Info!</strong> If you do not want to set any memory limit for this problem, leave the field blank.
                </div>
                    @Html.LabelFor(ex => ex.MemoryLimit, "Memory limit (in kilobytes)")
                    @Html.TextBoxFor(ex => ex.MemoryLimit, new { @class = "form-control" })
                    @Html.ValidationMessageFor(ex => ex.MemoryLimit)
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.Condition)
                @Html.TextAreaFor(ex => ex.Condition, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Condition)
            </div>


            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.InputFormat, "Imput Format: ")
                @Html.TextAreaFor(ex => ex.InputFormat, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation3)
            </div>

            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.OutputFormat, "Output Format:")
                @Html.TextAreaFor(ex => ex.OutputFormat, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation3)
            </div>

            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.Constraints, "Constrains: ")
                @Html.TextAreaFor(ex => ex.Constraints, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation3)
            </div>

            <br />
            <div class="alert alert-info">
                <strong>Info!</strong> By default there are 5 test cases to display to the user. If you have less than 5 test-cases to display, let the rest blank.
            </div>
            <br />

            <div class="row">
                Test case 1:
                <br />
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Input1, "Input")
                        @Html.TextAreaFor(ex => ex.Input1, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Input1)
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Output1, "Output")
                        @Html.TextAreaFor(ex => ex.Output1, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Output1)
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.Explanation1)
                @Html.TextAreaFor(ex => ex.Explanation1, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation1)
            </div>

            <br />
            <br />
            <div class="row">
                Test case 2:
                <br />
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Input2, "Input")
                        @Html.TextAreaFor(ex => ex.Input2, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Input2)
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Output2, "Output")
                        @Html.TextAreaFor(ex => ex.Output2, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Output2)
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.Explanation2)
                @Html.TextAreaFor(ex => ex.Explanation2, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation2)
            </div>

            <br />
            <br />
            <div class="row">
                Test case 3:
                <br />
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Input3, "Input")
                        @Html.TextAreaFor(ex => ex.Input3, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Input3)
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Output3, "Output")
                        @Html.TextAreaFor(ex => ex.Output3, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Output3)
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.Explanation3)
                @Html.TextAreaFor(ex => ex.Explanation3, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation3)
            </div>

            <br />
            <br />
            <div class="row">
                Test case 4:
                <br />
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Input4, "Input")
                        @Html.TextAreaFor(ex => ex.Input4, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Input4)
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Output4, "Output")
                        @Html.TextAreaFor(ex => ex.Output4, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Output4)
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.Explanation4)
                @Html.TextAreaFor(ex => ex.Explanation4, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation4)
            </div>

            <br />
            <br />
            <div class="row">
                Test case 5:
                <br />
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Input5, "Input")
                        @Html.TextAreaFor(ex => ex.Input5, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Input5)
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(ex => ex.Output5, "Output")
                        @Html.TextAreaFor(ex => ex.Output5, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                        @Html.ValidationMessageFor(ex => ex.Output5)
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(ex => ex.Explanation5)
                @Html.TextAreaFor(ex => ex.Explanation5, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                @Html.ValidationMessageFor(ex => ex.Explanation5)
            </div>

        </div>
        <div class="CreateProblem2">
            <p>BackEnd</p>
            <p>Create the test-cases that will score the points for the problem.</p>
            <p>Please, make sure that the inputs/outputs are in the correct format.</p>
            @for (int i = 0; i < 10; i++)
            {
                <br />
                <br />
                <div class="row">
                    Test case @(i + 1):
                    <br />
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(ex => ex.Test[i].Input, "Input")
                            @Html.TextAreaFor(ex => ex.Test[i].Input, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                            @Html.ValidationMessageFor(ex => ex.Test[i].Input)
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(ex => ex.Test[i].Output, "Output")
                            @Html.TextAreaFor(ex => ex.Test[i].Output, new { @class = "form-control", @rows = "6", @style = "width:100%; overflow:auto; max-width:100%;" })
                            @Html.ValidationMessageFor(ex => ex.Test[i].Output)
                        </div>
                    </div>
                </div>

            }
            <br />
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    }
</div>

@*
    To Do Next
           Validation
            Antihack
             Show the view only to Admins and Teachers
*@
@Html.Raw(TempData["BackEndTestsNeeded"])
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
}